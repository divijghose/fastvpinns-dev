# This YAML file contains configuration parameters for a variational physics-informed neural network (VarPINN) experimentation.

experimentation:
  output_path: "output/poisson2d/1"  # Path to the output directory where the results will be saved.

geometry:
  generate_mesh_plot: True  # Flag indicating whether to generate a plot of the mesh.
  mesh_generation_method: "convolution"
  generate_mesh_plot: True
  internal_mesh_params:
    x_min: 0
    x_max: 1
    y_min: 0
    y_max: 1
    n_cells_x: 3
    n_cells_y: 3
    n_boundary_points: 2000
    n_test_points_x: 100
    n_test_points_y: 100

  mesh_type: "quadrilateral"
  external_mesh_params:
    mesh_file_name: "meshes/unitsquare_tri.mesh"  # should be a .mesh file
    boundary_refinement_level: 4
    boundary_sampling_method: "lhs"  # "uniform" or "lhs"

  convolution_mesh_params:
    kernel_size_x: 2
    kernel_size_y: 2
    stride_x: 1
    stride_y: 1
  
  # internal mesh generated quadrilateral mesh, depending on the parameters specified below.

  exact_solution:
    exact_solution_generation: "internal" # whether the exact solution needs to be read from external file.
    exact_solution_file_name: "" # External solution file name (if exists from FEM)

  mesh_type: "quadrilateral"  # Type of mesh. Can be "quadrilateral" or other supported types.
  
  external_mesh_params:  # Parameters for external mesh generation method.
    mesh_file_name: "meshes/hemker.mesh"  # Path to the external mesh file (should be a .mesh file).
    boundary_refinement_level: 4  # Level of refinement for the boundary.
    boundary_sampling_method: "uniform"  # Method for sampling the boundary. Can be "uniform"

fe:
  fe_order: 4 # Order of the finite element basis functions.
  fe_type: "legendre"  # Type of finite element basis functions. Can be "jacobi" or other supported types.
  quad_order: 30  # Order of the quadrature rule.
  quad_type: "gauss-jacobi"  # Type of quadrature rule. Can be "gauss-jacobi" or other supported types.

pde:
  beta: 10  # Parameter for the PDE.

model:
  model_architecture: [2, 50,50,50, 1]  # Architecture of the neural network model.
  activation: "tanh"  # Activation function used in the neural network.
  use_attention: False  # Flag indicating whether to use attention mechanism in the model.
  epochs: 10000  # Number of training epochs.
  dtype: "float32"  # Data type used for computations.
  set_memory_growth: False  # Flag indicating whether to set memory growth for GPU.
  
  learning_rate:  # Parameters for learning rate scheduling.
    initial_learning_rate: 0.001  # Initial learning rate.
    use_lr_scheduler: False  # Flag indicating whether to use learning rate scheduler.
    decay_steps: 1000  # Number of steps between each learning rate decay.
    decay_rate: 0.99  # Decay rate for the learning rate.
    staircase: False  # Flag indicating whether to use staircase decay.
  

logging:
  update_console_output: 5000  # Number of steps between each update of the console output.
  update_progress_bar: 1000
  update_console_output: 2000
  update_solution_images: 5000
  use_wandb: False
  project_name: not_defined
  wandb_run_prefix: not_defined
  entity: not_defined
  print_verbose: True

domain_decomposition:
    scheduling_type: all
    scheduling_freq: 5000
    window_function_scaling: 0.035